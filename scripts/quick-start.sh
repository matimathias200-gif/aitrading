#!/bin/bash
#
# QUICK START - Lance tout le syst√®me BTC ONLY en 1 commande
#

set -e

BLUE='\033[0;34m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo -e "${BLUE}"
cat << "EOF"
‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë                                                           ‚ïë
‚ïë        BTC ONLY - SYST√àME QUICK START                    ‚ïë
‚ïë                                                           ‚ïë
‚ïë  Lance le syst√®me complet en 1 commande                  ‚ïë
‚ïë                                                           ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
EOF
echo -e "${NC}"

# Configuration
SUPABASE_URL="https://asnevyxhgnxtegfkbivb.supabase.co"
ANON_KEY="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFzbmV2eXhoZ254dGVnZmtiaXZiIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjA3MTAzMDUsImV4cCI6MjA3NjI4NjMwNX0.iGTpsV-MBNWqlY-WikSWBlvSK5Gx0PGoZLufOikLHO8"

# Fonction pour afficher une √©tape
step() {
    echo -e "\n${BLUE}‚ñ∂ $1${NC}"
}

# Fonction pour afficher le succ√®s
success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

# Fonction pour afficher un warning
warn() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# ===========================================================
# √âTAPE 1: HEALTH CHECK
# ===========================================================

step "1/5 - Health Check du syst√®me..."

health_response=$(curl -s "$SUPABASE_URL/functions/v1/health-check" \
    -H "Authorization: Bearer $ANON_KEY")

health_status=$(echo "$health_response" | jq -r '.status')

if [ "$health_status" = "healthy" ]; then
    success "Syst√®me en bonne sant√©"
elif [ "$health_status" = "degraded" ]; then
    warn "Syst√®me d√©grad√© mais fonctionnel"
else
    warn "Syst√®me en mauvaise sant√©, continuons quand m√™me..."
fi

echo "$health_response" | jq -C '.' | head -20

# ===========================================================
# √âTAPE 2: SCAN MARKET
# ===========================================================

step "2/5 - Scan du march√© Bitcoin..."

scan_response=$(curl -s -X POST "$SUPABASE_URL/functions/v1/scan-market" \
    -H "Authorization: Bearer $ANON_KEY" \
    -H "Content-Type: application/json" \
    --max-time 60)

scan_success=$(echo "$scan_response" | jq -r '.success')

if [ "$scan_success" = "true" ]; then
    btc_price=$(echo "$scan_response" | jq -r '.data.market.price')
    change_24h=$(echo "$scan_response" | jq -r '.data.market.change24h')
    sentiment=$(echo "$scan_response" | jq -r '.data.news.sentiment')

    success "March√© scann√©: BTC = \$$btc_price | Change 24h: ${change_24h}% | Sentiment: $sentiment"
else
    warn "√âchec du scan (continuons...)"
fi

sleep 5

# ===========================================================
# √âTAPE 3: G√âN√âRER SIGNAL
# ===========================================================

step "3/5 - G√©n√©ration du signal BTC..."

signal_response=$(curl -s -X POST "$SUPABASE_URL/functions/v1/generate-btc-signal" \
    -H "Authorization: Bearer $ANON_KEY" \
    -H "Content-Type: application/json" \
    --max-time 60)

signal_success=$(echo "$signal_response" | jq -r '.success')

if [ "$signal_success" = "true" ]; then
    signal_type=$(echo "$signal_response" | jq -r '.signal.signal_type')
    confidence=$(echo "$signal_response" | jq -r '.signal.confidence')
    entry=$(echo "$signal_response" | jq -r '.signal.entry_price')
    tp=$(echo "$signal_response" | jq -r '.signal.take_profit')
    sl=$(echo "$signal_response" | jq -r '.signal.stop_loss')

    success "Signal g√©n√©r√©: $signal_type @ $confidence% | Entry: $entry | TP: $tp | SL: $sl"
else
    warn "√âchec de g√©n√©ration du signal"
    echo "$signal_response" | jq -C '.'
fi

sleep 3

# ===========================================================
# √âTAPE 4: √âVALUER LES TRADES
# ===========================================================

step "4/5 - √âvaluation des trades..."

eval_response=$(curl -s -X POST "$SUPABASE_URL/functions/v1/evaluate-trades" \
    -H "Authorization: Bearer $ANON_KEY" \
    -H "Content-Type: application/json" \
    --max-time 60)

eval_success=$(echo "$eval_response" | jq -r '.success')

if [ "$eval_success" = "true" ]; then
    evaluated=$(echo "$eval_response" | jq -r '.evaluated')
    success "$evaluated trade(s) √©valu√©(s)"
else
    warn "Aucun trade √† √©valuer pour le moment"
fi

# ===========================================================
# √âTAPE 5: STATISTIQUES
# ===========================================================

step "5/5 - Statistiques du syst√®me..."

echo -e "\n${BLUE}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"
echo -e "${BLUE}üìä STATISTIQUES DU SYST√àME${NC}"
echo -e "${BLUE}‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ${NC}"

# Afficher les composants du health check
echo "$health_response" | jq -C '.components'

# ===========================================================
# R√âSUM√â
# ===========================================================

echo -e "\n${BLUE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo -e "${BLUE}‚ïë                   QUICK START TERMIN√â                     ‚ïë${NC}"
echo -e "${BLUE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"

echo -e "\n${GREEN}‚úÖ Le syst√®me BTC ONLY est maintenant op√©rationnel !${NC}"
echo -e "\n${YELLOW}Prochaines √©tapes:${NC}"
echo -e "  1. Configurer les cron jobs (voir SYSTEM_COMPLETE_GUIDE.md)"
echo -e "  2. Surveiller avec: ./scripts/test-system-complete.sh"
echo -e "  3. Dashboard SQL: psql \$DATABASE_URL -f scripts/monitoring-dashboard.sql"
echo -e "  4. Health check: curl $SUPABASE_URL/functions/v1/health-check"

echo -e "\n${BLUE}Documentation compl√®te: SYSTEM_COMPLETE_GUIDE.md${NC}\n"
